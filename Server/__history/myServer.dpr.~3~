program myServer;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  SynCommons,
  mORMot,
  SynLog,
  System.SysUtils,
  SynSQLite3Static,
  myServer.U_RESTServer in 'myServer.U_RESTServer.pas',
  RestServer.U_JWT in '..\Common\RestServer.U_JWT.pas',
  RestServer.U_Data in '..\Common\RestServer.U_Data.pas',
  RestServer.U_Const in '..\Common\RestServer.U_Const.pas',
  myServer.U_Start in 'myServer.U_Start.pas',
  RestServer.U_DTB in '..\Common\RestServer.U_DTB.pas',
  RestServer.I_Sample in '..\Common\RestServer.I_Sample.pas',
  RestServer.U_Sample in '..\Common\RestServer.U_Sample.pas';

begin
  try
    with TSQLLog.Family do
    begin
      Level := LOG_VERBOSE;
      EchoToConsole := LOG_VERBOSE;
      NoFile := True;
    end;

    InitializeServer();
    try
      Writeln('Press [Enter] to stop the server.'#10);
      Readln;

    finally
      FinalizeServer();
    end;
  except
    on E: Exception do
      Writeln(E.ClassName, ': ', E.Message);
  end;
end.
